---
#  Be sure to create a inventory.ini with [fog] and an IP for the fog server  
# You need to install sshpass - 
#  ansible-playbook -i inventory.ini playbook_fog.yaml --ask-become-pass
- name: Install and configure FOG server on Ubuntu 22.04 (No GUI)
  hosts: fog
  become: yes
  tasks:
    - name: Get FOG IP from inventory
      set_fact:
        fog_ip: "{{ inventory_hostname }}"

    - name: Update and upgrade the system
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install necessary packages
      apt:
        name:
          - python3
          - python3-pip
          - git
        state: present

    # - name: Set a static IP address
    #   ansible.builtin.lineinfile:
    #     path: /etc/netplan/01-netcfg.yaml
    #     regexp: '^\s*addresses:'
    #     line: "        addresses: [192.168.65.144/24]"
    #     state: present
    #   notify: Restart networking

    # - name: Apply netplan configuration
    #   command: netplan apply
    #   when: "ansible_facts['distribution'] == 'Ubuntu'"

    - name: Create directory for FOG
      file:
        path: /opt/Fog
        state: directory
   
    - name: Download FOG project from GitHub
      git:
        repo: 'https://github.com/FOGProject/fogproject.git'
        dest: /opt/Fog
        force: yes

    - name: Copy installfog.sh to FOG server
      copy:
        src: ./fog_conf/installfog.sh
        dest: /opt/Fog/bin/installfog.sh
        mode: '0755'
      become: yes

    - name: Copy functions.sh to FOG server
      copy:
        src: ./fog_conf/functions.sh
        dest: /opt/Fog/lib/common/functions.sh
        mode: '0755'
      become: yes

    - name: Copy input.sh to FOG server
      copy:
        src: ./fog_conf/input.sh
        dest: /opt/Fog/lib/common/input.sh
        mode: '0755'
      become: yes

    - name: Copy newinput.sh to FOG server
      copy:
        src: ./fog_conf/newinput.sh
        dest: /opt/Fog/lib/common/newinput.sh
        mode: '0755'
      become: yes
      
    - name: Run FOG installation script
      command: /opt/Fog/bin/installfog.sh
      register: install_output
      ignore_errors: yes
      become: yes

    - name: Send HTTP GET request to check FOG database status
      uri:
        url: "http://{{fog_ip}}/fog/status/dbrunning.php"
        method: GET
        headers:
          Accept: "application/json, text/javascript, */*; q=0.01"
          User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.6099.71 Safari/537.36"
          X-Requested-With: "XMLHttpRequest"
          Referer: "http://{{fog_ip}}/fog/management/index.php?node=schema"
          Accept-Encoding: "gzip, deflate, br"
          Accept-Language: "en-US,en;q=0.9"
          Connection: "close"
      register: response
      ignore_errors: yes

    # http://192.168.65.144/fog/management
    - name: Send HTTP POST request to check FOG database status
      uri:
        url: "http://{{fog_ip}}/fog/management/index.php?node=schema"
        method: POST
        headers:
          Origin: http://{{fog_ip}}
          User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.6099.71 Safari/537.36"
          Accept: "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"
          Referer: "http://{{fog_ip}}/fog/management/index.php?node=schema"
          Accept-Encoding: "gzip, deflate, br"
          Accept-Language: "en-US,en;q=0.9"
          Connection: "close"
        body: "fogverified=&confirm="
        body_format: "form-urlencoded"
      register: response
      ignore_errors: yes

    - name: Rerun FOG installation script
      command: /opt/Fog/bin/installfog.sh
      register: install_output
      ignore_errors: yes
      become: yes
      # notify: Restart FOG server

    # - name: Enable FOG API in configuration
    #   lineinfile:
    #     path: /opt/Fog/config/settings.json
    #     regexp: '"API_ENABLED": false'
    #     line: '"API_ENABLED": true'
    #     state: present
      # notify: Restart FOG server

  # handlers:
  #   - name: Restart networking
  #     service:
  #       name: systemd-networkd
  #       state: restarted

  #   - name: Restart FOG server
  #     command: reboot
  #     when: install_output is changed

