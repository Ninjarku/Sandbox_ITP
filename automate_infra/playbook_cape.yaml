---
#  Be sure to create a inventory.ini with [cape] and an IP for the cape server  
# You need to install sshpass - 
#  ansible-playbook -i inventory.ini playbook_cape.yaml --ask-become-pass
- name: CAPE Deployment
  hosts: cape
  become: yes
  tasks:
    - name: Update and install dependencies for git
      apt:
        name: git
        state: present
        force_apt_get: yes

    # - name: Apt Add deadsnake
    #   shell: sudo add-apt-repository ppa:deadsnakes/ppa
    - name: Add deadsnakes PPA for newer Python versions
      apt_repository:
        repo: ppa:deadsnakes/ppa
        state: present
        update_cache: yes
        
    # - name: Add MongoDB GPG key
    #   apt_key:
    #     url: https://www.mongodb.org/static/pgp/server-7.0.asc
    #     state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
      ignore_errors: yes  # This allows the playbook to continue if the task fails


    - name: Install Python 3
      apt:
        name: python3
        state: present

    - name: Ensure Python 3 pip is installed
      apt:
        name: python3-pip
        state: present
        force_apt_get: yes 
      ignore_errors: yes  # This allows the playbook to continue if the task fails

    - name: Install python3.10
      shell: yes "y" | sudo apt install python3.10 python3.10-venv python3.10-dev
    
    # - name: Update and install dependencies for python3
    #   apt:
    #     name: python3.10
    #     state: present
    #     force_apt_get: yes        
    
    # - name: Update and install dependencies for poetry
    #   apt:
    #     name: poetry
    #     state: present
    #     force_apt_get: yes  
    - name: Ensure pip is installed
      apt:
        name: python3-pip
        state: present
        update_cache: yes
      ignore_errors: yes  # This allows the playbook to continue if the task fails

    - name: Install Poetry using pip
      pip:
        name: poetry
        executable: pip3
        

#  The part for CAPE related install
    - name: Add CAPE directory as a safe Git directory
      command: git config --global --add safe.directory /opt/CAPEv2

    - name: Clone CAPE repository
      git:
        repo: https://github.com/kevoreilly/CAPEv2.git
        dest: /opt/CAPEv2
        version: fa94c917659a24a412ae793a54e2be48e5f15ec7
        force: no  # Ensure it doesn't overwrite or force changes
      ignore_errors: yes  # This allows the playbook to continue if the task fails


    - name: Check if CAPEv2 repo already exists
      stat:
        path: /opt/CAPEv2/.git
      register: cape_repo_exists

    - name: Skip cloning if repository already exists
      git:
        repo: https://github.com/kevoreilly/CAPEv2.git
        dest: /opt/CAPEv2
        version: fa94c917659a24a412ae793a54e2be48e5f15ec7
      when: not cape_repo_exists.stat.exists
      ignore_errors: yes

    - name: Install CAPE dependencies
      pip:
        requirements: /opt/CAPEv2/requirements.txt

    - name: Change to capesandbox directory
      command: chdir=/opt/CAPEv2 /bin/true 

    # Download the cape script and run
    # - name: Download CAPE installation script
    #   get_url:
    #     url: https://raw.githubusercontent.com/kevoreilly/CAPEv2/master/installer/cape2.sh
    #     dest: /opt/capesandbox/cape2.sh
    #     mode: '0755'

    - name: Copy CAPE installation script from local to remote
      copy:
        src: ./cape2.sh
        dest: /opt/CAPEv2/cape2.sh
        mode: '0755'
        
    - name: Run CAPE installation script with debug
      shell: |
        DEBIAN_FRONTEND=noninteractive yes "y" | sudo bash /opt/CAPEv2/cape2.sh base cape
      become: yes
      register: cape_install_output
  

    - name: Change ownership of /opt/CAPEv2 to user cape and group cape
      file:
        path: /opt/CAPEv2
        state: directory
        recurse: yes
        owner: cape
        group: cape

    - name: Debug CAPE installation output
      debug:
        var: cape_install_output
# Copy our updated Config scripts from https://github.com/Cassandra-Fu/CAPE_SIT_EDITION
    - name: Replace cuckoo.conf file with our updated one
      copy:
          src: ./conf/cuckoo.conf
          dest: /opt/CAPEv2/cuckoo.conf
          mode: '0644'
    
    - name: Replace auxiliary.conf file with our updated one
      copy:
          src: ./conf/auxiliary.conf
          dest: /opt/CAPEv2/auxiliary.conf
          mode: '0644'

    - name: Replace reporting.conf file with our updated one
      copy:
          src: ./conf/reporting.conf
          dest: /opt/CAPEv2/reporting.conf
          mode: '0644'

    - name: Replace routing.conf file with our updated one
      copy:
          src: ./conf/routing.conf
          dest: /opt/CAPEv2/routing.conf
          mode: '0644'

    - name: Replace web.conf file with our updated one
      copy:
          src: ./conf/web.conf
          dest: /opt/CAPEv2/web.conf
          mode: '0644'
    - name: Replace web.conf file with our updated one
      copy:
          src: ./conf/cuckoo.conf
          dest: /opt/CAPEv2/cuckoo.conf
          mode: '0644'

    - name: Install poetry dependencies in CAPEv2 directory
      shell: |
        cd /opt/CAPEv2
        sudo poetry install
      args:
        chdir: /opt/CAPEv2  # Ensures the command is executed in this directory

    - name: Install CAPE python requirements in CAPEv2 directory
      shell: |
        python3 -m pip install -r /opt/CAPEv2/requirements.txt  
      args:
        chdir: /opt/CAPEv2  # Ensures the command is executed in this directory

    - name: INSTALL FLARE Signatures
      shell: |
        cd /opt/CAPEv2/utils
        sudo python3.10  /opt/CAPEv2/utils/community.py -cr 
      args:
        chdir: /opt/CAPEv2/utils  # Ensures the command is executed in this directory

    - name: Start Database Server
      shell: |
        python3.10 /opt/CAPEv2/web/manage.py migrate 
      args:
        chdir: /opt/CAPEv2/web  # Ensures the command is executed in this directory

# Create super user in cape
    - name: Run createsuperuser command with automated responses
      expect:
        command: "python3.10 /opt/CAPEv2/web/manage.py createsuperuser"
        chdir: /opt/CAPEv2/web
        responses:
          "Username": "cape\n"
          "Email address": "cape@example.com\n"
          "Password": "cape_pass\n"
          "Password (again)": "cape_pass\n"
      no_log: true  # hides the password and other sensitive info in the output

    - name: Generate API token
      shell: |
        python3.10 /opt/CAPEv2/web/manage.py drf_create_token cape
      args:
        chdir: /opt/CAPEv2/web  # Ensures the command is executed in this directory


    


# Cleanup
    - name: Remove useless packages from the cache
      apt:
        autoclean: yes

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes

